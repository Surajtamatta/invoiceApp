import Head from "next/head";
import Link from "next/link";
import { MongoClient } from "mongodb";

export default function Home({ data }) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="main__container">
          <div className="invoice__header">
            <div className="invoice__header-logo">
              <h3 >Invoices</h3>
              <p>There are total {data.length} invoices</p>
            </div>
            <div className="invoice_btn_wrapper">
              <Link href="/add-new">
                <button className="btn">Add New</button>
              </Link>
            </div>
          </div>

          <div className="invoice__container">
            {data?.map((invoice) => (
              <Link href={`/invoices/${invoice.id}`} passHref key={invoice.id}>
                <div className="invoice__item">
                  <div>
                    <h5 className="invoice__id">
                      {invoice.id.substr(0, 6).toUpperCase()}
                    </h5>
                  </div>

                  <div>
                    <h5 className="invoice__client">
                      {invoice.sellerDetails}
                    </h5>
                  </div>

                  <div>
                    <h5 className="invoice__created">{invoice.createdAt}</h5>
                  </div>

                  <div>
                    <h5 className="invoice__total">${invoice.total}</h5>
                  </div>

                  <div>
                    <button
                      className={`${
                        invoice.status === "paid"
                          ? "paid__status"
                          : invoice.status === "pending"
                          ? "pending__status"
                          : "draft__status"
                      }`}
                    >
                      {invoice?.status}
                    </button>
                  </div>
                </div>
              </Link>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}

export async function getStaticProps() {
  const client = await MongoClient.connect(
    `mongodb+srv://${process.env.USER__NAME}:${process.env.USER__PASSWORD}@cluster0.liesnjz.mongodb.net/${process.env.DATABASE__NAME}?retryWrites=true&w=majority&appName=Cluster0`
  );

  const db = client.db();
  const collection = db.collection("allInvoices");

  const invoices = await collection.find({}).toArray();

  const sanitizedInvoices = invoices.map((invoice) => ({
    id: invoice._id.toString(),
    sellerDetails: invoice.sellerDetails?.name ?? null,
    createdAt: invoice.invoiceDetails?.invoiceDate ?? null,
    total: invoice.totalAmount ?? null,
    status: invoice?.status ?? null,
  }));

  client.close();

  return {
    props: {
      data: sanitizedInvoices,
    },
    revalidate: 1,
  };
}
